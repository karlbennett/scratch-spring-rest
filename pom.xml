<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.1.8.RELEASE</version>
    </parent>

    <name>scratch-spring-rest</name>

    <description>
        A simple pre-baked Spring Boot webapp to play with.
    </description>

    <artifactId>scratch-spring-rest</artifactId>

    <packaging>war</packaging>

    <version>1.0-SNAPSHOT</version>

    <url>https://github.com/karlbennett/scratch-spring-rest</url>

    <properties>
        <java.version>1.7</java.version>
        <jersey.version>[2.13]</jersey.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>

        <!-- Enable Spring MVC (request mapping) within Spring Boot. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- It is best to set the Tomcat dependencies to provided if an executable WAR is going to be generated. As -->
        <!-- apposed to an executable JAR.-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Enable Spring Data (ORM) within Spring Boot. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- The HSQL in memory database where all the data is persisted.-->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>[2.3.2]</version>
        </dependency>

        <!-- Add all the Spring Boot test utils, this includes the Spring MVC test harness. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- The Jersey client that will be used to access to the scratch REST endpoints in the integration tests. -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <!-- This dependency enables automatic JSON serialisation and deserialisation in the Jersey client. -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- Database setup utility for importing and clearing test data. -->
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>[2.4.9]</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
